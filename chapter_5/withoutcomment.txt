def readfiles(a):
	b=open(a)
	for q in b:
		print q
#		grep(pattern,filename)
readfiles("sample.txt")
def grep(pattern,filename):
	for q in open(filename):
		if pattern in q:
			print q
grep("as","sample.txt")
#Write a program that takes one or more filenames as arguments and prints all the lines which are longer than 40 characters.
files=["sample.txt","sample2.txt"]
k=[]
def readfiles(files):
	for f in files:
		for q in open(f):
			 k.append(q)
	return k
u=readfiles(files)
def select(u):
	for e in u:
		if len(e)>12:
			print e
		#print e
select(u)	
def readfiles(filenames):
    for f in filenames:
        for line in open(f):
            print line
readfiles("sample.txt","sample2.txt")
import re
import os
n=[]
mn=open("withoutcomment.txt","w")
def listallfiles():
        q=os.listdir(".")
        return q
def search_python_files(l):
        for u in l:
                y=re.match(r'.\w*.py$',u)
                if y:
                        p=readfiles(u)
	mn.close()	
	o=calculate(p)
        print "The total count of python lines:",o
def readfiles(k):
        print k
	qw=open(k).readlines()
	for e in qw:
		if not (e.startswith("#")|e.startswith("'''")):
			mn.write(e)
def calculate(p):
	mn=open("withoutcomment.txt","r")
	p=len(mn.readlines())
	mn.close()
        print p
        return p
l=listallfiles()
search_python_files(l)
#rite a function to compute the number of python files (.py extension) in a specified directory recursively.
import re
import os
def listallfiles():
	q=os.listdir(".")
	return q
def search_python_files(l):
	count=0
	for u in l:
		print u
		y=re.match(r'.\w*.py$',u)
		if y:
			count+=1
	print "The total count of python files:",count
l=listallfiles()
search_python_files(l)
#Write a function to compute the total number of lines of code, ignoring empty and comment lines, in all python files in the specified directory recursively.
import re
import os
n=[]
mn=open("withoutcomment.txt","w")
def listallfiles():
        q=os.listdir(".")
        return q
def search_python_files(l):
        for u in l:
                y=re.match(r'.\w*.py$',u)
                if y:
                        p=readfiles(u)
        mn.close()
        o=calculate(p)
        print "The total count of python lines:",o
def readfiles(k):
        print k
        qw=open(k).readlines()
        for e in qw:
		rt=re.search(r'^#|([\w+\d+])',e)
		if  rt:
                #if not (e.startswith("#")|e.startswith("'''")):
                        mn.write(e)
def calculate(p):
        mn=open("withoutcomment.txt","r")
        p=len(mn.readlines())
        mn.close()
        print p
        return p
l=listallfiles()
search_python_files(l)
#Write a function to compute the total number of lines of code in all python files in the specified directory recursively.
import re
import os
n=[]
def listallfiles():
        q=os.listdir(".")
        return q
def search_python_files(l):
        for u in l:
                y=re.match(r'.\w*.py$',u)
                if y:
			p=readfiles(u)
			n.append(p)
        print "The total count of python lines:",sum(n)
def readfiles(k):
	print k
	p=len(open(k).readlines())
	print p
	return p
l=listallfiles()
search_python_files(l)
def readfiles(a):
	b=open(a,"r")
	for q in b:
		print q
readfiles("sample.txt")
readfiles("sample2.txt")
def main(pattern,filename):
	readfiles(filename)
	grep(pattern,filename)
def readfiles(filename):
	for o in open(filename):
		print  o	
def grep(pattern,filename):
	for o in open(filename):
		if pattern in o:
			print o
main("as","sample.txt")
class  yrange:
    def __init__(self, n):
        self.i = 0
        self.n = n
    def __iter__(self):
        return self
    def next(self):
        if self.i < self.n:
            i = self.n
            self.n  -= 1
            return i
        else:
            raise StopIteration()
a=yrange(4)
print a.next()
print a.next()
print list(yrange(5))
#Write a function findfiles that recursively descends the directory tree for the specified directory and generates paths of all the files in the tree.
import os
def findfiles():
	q=os.listdir(".")
	for j in  q:
		print os.path.abspath(j)
findfiles()
'''class yrange:
	def __init__(self,n):
		self.i=0
		self.n=n
	def __iter__(self):
        	return self
	def next(self):
		if self.i<self.n:
			i=self.i
			self.i+=1
			return i
		else:
			print "stop itration"
a=yrange(3)
print a.next()
#print a.next()
print list (yrange(5))'''
class yrange:
    def __init__(self, n):
        self.i = 0
        self.n = n
    def __iter__(self):
        return self
    def next(self):
        if self.i < self.n:
            i = self.i
            self.i += 1
            return i
        else:
            raise StopIteration()
a=yrange(3)	
print a.next()
print a.next()	
print list(yrange(5))
